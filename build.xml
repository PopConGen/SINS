<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<!-- By default, only the Clean and Build commands use this build script. -->
<!-- Commands such as Run, Debug, and Test only use this build script if -->
<!-- the Compile on Save feature is turned off for the project. -->
<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->
<!-- in the project's Project Properties dialog box.-->


<project name="SINS2" default="default" basedir=".">
    <description>Builds, tests, and runs the project SINS2.</description>
    <import file="nbproject/build-impl.xml"/>
    
    <target depends="-pre-init,-init-private" name="-init-user">
      <!--TODO should find a way to fix the need for this file-->
      <property file="/home/tiago/.netbeans/8.2/build.properties"/>
    </target>

<!--
    <target name="-post-jar">
    <property name="store.jar.name" value="SINS2"/>
    <property name="store.dir" value="dist"/>
    <property name="store.jar" value="${store.dir}/${store.jar.name}.jar"/>
    <echo message="Packaging ${application.title} into a single JAR at ${store.jar}"/>
    <jar destfile="${store.dir}/temp_final.jar" filesetmanifest="skip">
        <zipgroupfileset dir="dist" includes="*.jar"/>
        <zipgroupfileset dir="dist/lib" includes="*.jar"/>
        <manifest>
            <attribute name="Main-Class" value="${SINS2.class}"/>
        </manifest>
    </jar>
    <zip destfile="${store.jar}">
        <zipfileset src="${store.dir}/temp_final.jar"
        excludes="META-INF/*.SF, META-INF/*.DSA, META-INF/*.RSA"/>
    </zip>
    <delete file="${store.dir}/temp_final.jar"/>
    <delete dir="${store.dir}/lib"/>
    <delete file="${store.dir}/README.TXT"/>
</target>
-->
<!--
<target name="-pre-init">
   <property name="project.name" value="SINS2" />
   <property name="version.num" value="1.0" />
   <tstamp>
      <format property="NOW" pattern="yyyy-MM-dd HH:mm:ss z" />
   </tstamp>
   <manifest file="manifest.mf">
      <attribute name="Bundle-Name" value="${project.name}" />
      <attribute name="Bundle-Version" value="${version.num}" />
      <attribute name="Bundle-Date" value="${NOW}" />
      <attribute name="Implementation-Title" value="${project.name}" />
      <attribute name="Implementation-Version" value="${version.num}" />
   </manifest>
</target>
-->
<target name="-post-jar">
    <property name="project.name" value="SINS2" />
    <property name="version.num" value="1.0" /> <!-- Increment this number after a large release -->
    <buildnumber file="build.num" />
    <tstamp>
        <format property="NOW" pattern="yyyy-MM-dd HH:mm:ss z" />
        <format property="now.version" pattern="yy.MM.dd"/>
    </tstamp>
    
    <!-- Add the version information to the manifest file -->
    <!--<jar destfile="build/dist/lib/"
    update='true'
    index='true' > -->
        <manifest file="manifest.mf">
            <attribute name="Created-By" value="${user.name}"/>
            <attribute name="Java-version" value="${java.version}"/>
            <attribute name="JVM-version" value="${java.vm.version}"/>
            <attribute name="Implementation-Title" value="${project.name}" />
            <attribute name="Implementation-Version" value="${version.num}" />
            <attribute name="Build-Version" value="${build.number}" />
            <attribute name="${project.name}-Version" value="${version.num}.${now.version}.${build.number}" />
            <attribute name="${project.name}-BuildStamp" value="${NOW}" />
       </manifest>
    <!--</jar>-->

    <!--Sign the jar file with you credentials -->
    <!--<signjar jar="${dist.jar}" alias="..." keystore="..." storepass="..." />-->
    
    <!-- Make a copy of the jar file and add the version number to the filename -->
    <copy file="${dist.jar}" tofile="${dist.dir}/${project.name}.${version.num}.${now.version}.${build.number}.jar" />
    <!-- Make a copy of the manifest file and add it to the dist folder -->
    <copy file="manifest.mf" tofile="${dist.dir}/manifest.mf" />
    
    <!-- Include python program to for image processing -->
    <copy todir="${dist.dir}/SINS_PlotDemographyStats/">
        <fileset dir="SINS_PlotDemographyStats/" includes="*.py" />
    </copy>
    
    <!-- Include premade input -->
    <copy todir="${dist.dir}/input/Premade_SINS_Project">
        <fileset dir="input/Premade_SINS_Project" />
    </copy>
    
<!--    <property name="pyProgName" value="PlotDemographySins" />
     Copy possible unix executable and KEEP permissions 
    <exec executable="cp">
        <arg value="-pf"/>
        <arg value="SINS_PlotDemographyStats/dist/${pyProgName}"/>
        <arg value="${dist.dir}/SINS_PlotDemographyStats/"/>
    </exec>
     Copy possible windows executable 
    <exec executable="cp">
        <arg value="-pf"/>
        <arg value="SINS_PlotDemographyStats/dist/${pyProgName}.exe"/>
        <arg value="${dist.dir}/SINS_PlotDemographyStats/"/>
    </exec>-->
</target>

</project>
